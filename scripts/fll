#!/bin/sh

###############################################################################
#	F.U.L.L.S.T.O.R.Y initramfs live media init functions
#
#	Copyright:
#			© 2007-2025 Kel Modderman <kelvmod@gmail.com>
#			© 2006-2014 Stefan Lippers-Hollmann <s.l-h@gmx.de>
#			© 2007-2014 Niall Walsh <niallwalsh@celtux.org>
#	License:	GPLv2
#
#	F.U.L.L.S.T.O.R.Y Project Homepage:
#	https://github.com/fullstory
#
#	This script snippet needs to get executed under busybox sh, due to
#	using awk; klibc sh doesn't provide an awk implementation

###############################################################################
# 	define mountroot() for init
###############################################################################
mountroot()
{
	# source distro-defaults
	. /etc/default/distro

	# parse fll options given on cmdline
	for opt in $(cat /proc/cmdline); do
		case "${opt}" in
			blacklist=*)
				BLACKLIST="${BLACKLIST} ${opt#blacklist=}"
				;;
			desktop=*)
				DESKTOP="${opt#desktop=}"
				;;
			noeject)
				NO_EJECT="1"
				;;
			fll=debug)
				FLL_DEBUG="1"
				set -x
				;;
			hostname=*)
				CUSTOM_HOSTNAME="${opt#hostname=}"
				;;
			username=*)
				FLL_LIVE_USER="${opt#username=}"
				;;
			quiet)
				if [ -f /proc/sys/kernel/printk ]; then
					echo "0" > /proc/sys/kernel/printk
				fi
				;;
			utc=yes)
				UTC="yes"
				;;
			utc|gmt)
				CUSTOM_TZ="Etc/UTC"
				;;
			tz=*)
				CUSTOM_TZ="${opt#tz=}"
				;;
		esac
	done

	#
	# Run scripts in local-top, like lvm2
	#
	[ "$quiet" != "y" ] && log_begin_msg "Running /scripts/local-top"
	run_scripts /scripts/local-top
	[ "$quiet" != "y" ] && log_end_msg

	# debug checkpoint
	maybe_break fll-premount

	/usr/bin/fll_blockdev_detect --monitor --execp=/usr/lib/fll/fll.initramfs

	# debug checkpoint
	maybe_break fll-postmount

	printf "Preparing live filesystem...\n"

	# prepare /dev /media /proc and /sys
	for dir in dev media proc run sys; do
		mkdir -p -m 0755 "${rootmnt}/${dir}"
	done

	# tmp with correct permissions for users
	mkdir -p -m 1777 "${rootmnt}/tmp"

	# honour blacklist= cheatcode to disable naughty modules before udev
	if [ "${BLACKLIST}" ]; then
		for module in ${BLACKLIST}; do
			if ! grep -s -q "^blacklist ${module}" "${rootmnt}/etc/modprobe.d/*"; then
				echo "blacklist ${module}" >> "${rootmnt}/etc/modprobe.d/fll-blacklist.conf"
			fi
		done
	fi

	# disable movement of static $rootmnt/dev by scripts/init-bottom/udev
	export no_static_dev="1"

	# disable checkroot/checkfs
	touch ${rootmnt}/fastboot

	# custom hostname given on cmdline
	if [ "${CUSTOM_HOSTNAME}" ]; then
		echo "${CUSTOM_HOSTNAME}" > "${rootmnt}/etc/hostname"
		echo "${CUSTOM_HOSTNAME}" > "${rootmnt}/etc/mailname"
		# update /etc/hosts
		sed -i '/localhost/!s/^\(127.0.0.1[ \t]\+\)\(.\+\)$/\1'"${CUSTOM_HOSTNAME}"'/' \
			"${rootmnt}/etc/hosts"
	fi

	# Setup root user environment
	for file in '.bash_logout' '.bash_profile' '.bashrc' '.profile'; do
		if [ -f ${rootmnt}/etc/skel/${file} ] && [ ! -f ${rootmnt}/root/${file} ]; then
			cp ${rootmnt}/etc/skel/${file} ${rootmnt}/root/${file}
		fi
	done
	:> ${rootmnt}/root/.hushlogin

	# Patch /etc/default/distro
	sed -i "s#^FLL_LIVE_USER=.*#FLL_LIVE_USER=\"${FLL_LIVE_USER}\"#; \
		s#^FLL_IMAGE_DIR=.*#FLL_IMAGE_DIR=\"${FLL_IMAGE_DIR}\"#; \
		s#^FLL_IMAGE_LOCATION=.*#FLL_IMAGE_LOCATION=\"${FLL_IMAGE_LOCATION}\"#" \
		"${rootmnt}/etc/default/distro"

	if [ -z "${DESKTOP}" ]; then
		# in the absence of an explicit destop= cheatcode setting,
		# these defaults are checked in reverse order
		[ -r "${rootmnt}/usr/share/wayland-sessions/sway.desktop" ] && DESKTOP="sway"
		[ -r "${rootmnt}/usr/share/wayland-sessions/hyprland.desktop" ] && DESKTOP="hyprland"
		[ -r "${rootmnt}/usr/share/wayland-sessions/labwc.desktop" ] && DESKTOP="labwc"
		[ -r "${rootmnt}/usr/share/xsessions/mate.desktop" ] && DESKTOP="mate"
		[ -r "${rootmnt}/usr/share/xsessions/budgie-desktop.desktop" ] && DESKTOP="budgie-desktop"
		[ -r "${rootmnt}/usr/share/wayland-sessions/cinnamon-wayland.desktop" ] && DESKTOP="cinnamon-wayland"
		[ -r "${rootmnt}/usr/share/xsessions/cinnamon.desktop" ] && DESKTOP="cinnamon"
		[ -r "${rootmnt}/usr/share/xsessions/kodi.desktop" ] && DESKTOP="kodi-x11"
		[ -r "${rootmnt}/usr/share/wayland-sessions/kodi-gbm.desktop" ] && DESKTOP="kodi"
		[ -r "${rootmnt}/usr/share/xsessions/icewm-session.desktop" ] && DESKTOP="icewm"
		[ -r "${rootmnt}/usr/share/xsessions/fluxbox.desktop" ] && DESKTOP="fluxbox"
		[ -r "${rootmnt}/usr/share/xsessions/LXDE.desktop" ] && DESKTOP="lxde"
		[ -r "${rootmnt}/usr/share/xsessions/lxqt.desktop" ] && DESKTOP="lxqt"
		[ -r "${rootmnt}/usr/share/wayland-sessions/lxqt-wayland.desktop" ] && DESKTOP="lxqt-wayland"
		[ -r "${rootmnt}/usr/share/wayland-sessions/xfce-wayland.desktop" ] && DESKTOP="xfce-wayland"
		[ -r "${rootmnt}/usr/share/xsessions/xfce.desktop" ] && DESKTOP="xfce"
		[ -r "${rootmnt}/usr/share/xsessions/gnome.desktop" ] && DESKTOP="gnome-x11"
		[ -r "${rootmnt}/usr/share/wayland-sessions/gnome.desktop" ] && DESKTOP="gnome"
		[ -r "${rootmnt}/usr/share/xsessions/plasmax11.desktop" ] && DESKTOP="plasmax11"
		[ -r "${rootmnt}/usr/share/wayland-sessions/plasma.desktop" ] && DESKTOP="plasma"
	fi

	case "${DESKTOP}" in
		budgie-desktop)
			FLL_XTYPE="x11"
			FLL_XSESSION="budgie-desktop"
			;;
		cinnamon-wayland)
			FLL_XTYPE="wayland"
			FLL_XSESSION="cinnamon-wayland"
			;;
		cinnamon)
			FLL_XTYPE="x11"
			FLL_XSESSION="cinnamon"
			;;
		flux*)
			FLL_XTYPE="x11"
			FLL_XSESSION="fluxbox"
			;;
		gnome)
			FLL_XTYPE="wayland"
			FLL_XSESSION="gnome"
			;;
		gnome-x11)
			FLL_XTYPE="x11"
			FLL_XSESSION="gnome"
			;;
		hyprland)
			FLL_XTYPE="wayland"
			FLL_XSESSION="hyprland"
			;;
		icewm)
			FLL_XTYPE="x11"
			FLL_XSESSION="IceWM"
			;;
		kde|kde-wayland|plasma)
			FLL_XTYPE="wayland"
			FLL_XSESSION="plasma"
			;;
		kde-x11|plasmax11)
			FLL_XTYPE="x11"
			FLL_XSESSION="plasmax11"
			;;
		kodi)
			FLL_XTYPE="wayland"
			FLL_XSESSION="kodi-gbm"
			;;
		kodi-x11)
			FLL_XTYPE="x11"
			FLL_XSESSION="kodi"
			;;
		labwc)
			FLL_XTYPE="wayland"
			FLL_XSESSION="labwc"
			;;
		lxde)
			FLL_XTYPE="x11"
			FLL_XSESSION="LXDE"
			;;
		lxqt)
			FLL_XTYPE="x11"
			FLL_XSESSION="lxqt"
			;;
		lxqt-wayland|lxqt-labwc|lxqt-kwin|lxqt-hyprland|lxqt-sway|lxqt-wayfire)
			FLL_XTYPE="wayland"
			FLL_XSESSION="lxqt-wayland"
			;;
		mate)
			FLL_XTYPE="x11"
			FLL_XSESSION="mate"
			;;
		sway)
			FLL_XTYPE="wayland"
			FLL_XSESSION="sway"
			;;
		xfce)
			FLL_XTYPE="x11"
			FLL_XSESSION="xfce"
			;;
		xfce-wayland)
			FLL_XTYPE="wayland"
			FLL_XSESSION="xfce-wayland"
			;;
		*)
			FLL_XTYPE=""
			FLL_XSESSION=""
			;;
	esac

	if grep -q "^FLL_XDESKTOP" "${rootmnt}/etc/default/distro"; then
		sed -i "s/FLL_XDESKTOP=.*/FLL_XDESKTOP=\"${DESKTOP}\"" \
			"${rootmnt}/etc/default/distro"
	else
		echo "FLL_XDESKTOP=\"${DESKTOP}\"" >> "${rootmnt}/etc/default/distro"
	fi
	if grep -q "^FLL_XTYPE" "${rootmnt}/etc/default/distro"; then
		sed -i "s/FLL_XTYPE=.*/FLL_XTYPE=\"${FLL_XTYPE}\"" \
			"${rootmnt}/etc/default/distro"
	else
		echo "FLL_XTYPE=\"${FLL_XTYPE}\"" >> "${rootmnt}/etc/default/distro"
	fi
	if grep -q "^FLL_XSESSION" "${rootmnt}/etc/default/distro"; then
		sed -i "s/FLL_XSESSION=.*/FLL_XSESSION=\"${FLL_XSESSION}\"" \
			"${rootmnt}/etc/default/distro"
	else
		echo "FLL_XSESSION=\"${FLL_XSESSION}\"" >> "${rootmnt}/etc/default/distro"
	fi

	# allow CUSTOM_TZ to override above TZ definitions
	if [ -n "${CUSTOM_TZ}" ]; then
		case "${CUSTOM_TZ}" in
			utc|UTC)
				CUSTOM_TZ="Etc/UTC"
				;;
		esac
		[ -f "${rootmnt}/usr/share/zoneinfo/${CUSTOM_TZ}" ] && TZ="${CUSTOM_TZ}"
	fi

	# configure timezone, fallback to UTC
	[ -f "${rootmnt}/usr/share/zoneinfo/${TZ}" ] || TZ="Etc/UTC"
	echo "configuring timezone data for '${TZ}'"
	echo "${TZ}" > "${rootmnt}/etc/timezone"
	rm -f "${rootmnt}/etc/localtime"
	ln -sf "/usr/share/zoneinfo/${TZ}" "${rootmnt}/etc/localtime"

	# make localtime default, unless tz=Etc/UTC or utc=yes
	if [ "${TZ}" = "Etc/UTC" ] || [ "${UTC}" = "yes" ]; then
		printf "0.000000 0 0.000000\n0\nUTC\n" > "${rootmnt}/etc/adjtime"
	else
		# debian defaults to UTC=yes, which is rumored to be dual-boot unfriendly
		printf "0.000000 0 0.000000\n0\nLOCAL\n" > "${rootmnt}/etc/adjtime"
	fi

	# configure live getty configuration for systemd
	if [ -r "${rootmnt}/lib/systemd/system/getty@.service" ]; then
		sed -e 's#^ExecStart=.*#ExecStart=-/sbin/agetty --noclear -n -i -l /usr/bin/fll_login %I 38400 linux#' \
			"${rootmnt}/lib/systemd/system/getty@.service" > "${rootmnt}/etc/systemd/system/getty@.service"
		ln -fs /etc/systemd/system/getty@.service "${rootmnt}/etc/systemd/system/getty.target.wants/getty@tty1.service"
		ln -fs getty@.service "${rootmnt}/etc/systemd/system/autovt@.service"
	fi

	# Save an in-memory copy of the live initial ramdisk for shutdown (exitrd)
	# https://systemd.io/INITRD_INTERFACE/
	mkdir /run/initramfs~
	mount --bind / /run/initramfs~
	cp -a /run/initramfs~/* /run/initramfs/
	umount /run/initramfs~
	rmdir /run/initramfs~
	# Ensure systemd can pivot into exitrd at shutdown
	mount -o remount,exec /run
	# Put exitrd on a diet to save memory
	rm -rf /run/initramfs/lib/modules /run/initramfs/lib/firmware

	# don't prompt for ejecting in a virtual machine, unless overriden
	systemd-detect-virt --quiet && touch /run/initramfs/fll.no_eject
	[ -n "${NO_EJECT}" ] && touch /run/initramfs/fll.no_eject
	[ -n "${FLL_DEBUG}" ] && touch /run/initramfs/fll.debug

	# final debug checkpoint
	maybe_break fll-bottom

	printf "\nStarting init process...\n\n"
}

